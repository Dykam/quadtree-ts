/* https://github.com/timohausmann/quadtree-js.git v2.0.0 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Quadtree=e()}(this,(function(){"use strict";class t{constructor(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height,this.data=t.data||{}}static getIndex(t,e){const s=[],i=e.x+e.width/2,h=e.y+e.height/2,n=t.y<h,o=t.x<i,d=t.x+t.width>i,r=t.y+t.height>h;return n&&d&&s.push(0),o&&n&&s.push(1),o&&r&&s.push(2),d&&r&&s.push(3),s}}class e{constructor(t,e=10,s=4,i=0){this.bounds=t,this.max_objects=e,this.max_levels=s,this.level=i,this.objects=[],this.nodes=[]}getIndex(e){var s;return(e.getIndex||(null===(s=e.constructor)||void 0===s?void 0:s.getIndex)||t.getIndex)(e,this.bounds)}split(){const t=this.level+1,s=this.bounds.width/2,i=this.bounds.height/2,h=this.bounds.x,n=this.bounds.y,o=[{x:h+s,y:n},{x:h,y:n},{x:h,y:n+i},{x:h+s,y:n+i}];for(var d=0;d<4;d++)this.nodes[d]=new e({x:o[d].x,y:o[d].y,width:s,height:i},this.max_objects,this.max_levels,t)}insert(t){var e,s=0;if(this.nodes.length)for(e=this.getIndex(t),s=0;s<e.length;s++)this.nodes[e[s]].insert(t);else if(this.objects.push(t),this.objects.length>this.max_objects&&this.level<this.max_levels){for(this.nodes.length||this.split(),s=0;s<this.objects.length;s++){e=this.getIndex(this.objects[s]);for(var i=0;i<e.length;i++)this.nodes[e[i]].insert(this.objects[s])}this.objects=[]}}retrieve(t){var e=this.getIndex(t),s=this.objects;if(this.nodes.length)for(var i=0;i<e.length;i++)s=s.concat(this.nodes[e[i]].retrieve(t));return s=s.filter((function(t,e){return s.indexOf(t)>=e}))}clear(){this.objects=[];for(var t=0;t<this.nodes.length;t++)this.nodes.length&&this.nodes[t].clear();this.nodes=[]}}return Object.assign(e,{Rectangle:t})}));
